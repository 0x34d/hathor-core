name: tests
on:
  push:
    branches:
    - master
    - dev
    tags:
    - v*
  pull_request:
    branches:
    - dev
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      shell: python
      run: |
        import os
        import json
        full_matrix = {
          'python': ['3.7', '3.8', '3.9', '3.10'],
          # XXX: temporarily removing 'macos-latest' until python-rocksdb build is fixed
          # 'os': ['ubuntu-latest', 'macos-latest', 'windows-latest'],
          'os': ['ubuntu-latest', 'windows-latest'],
          # XXX: tests fail on these, not sure why, when running them individually each on passes, but not on `make tests`
          # 'include': [
          #   {'os': 'ubuntu-latest', 'python': 'pypy-3.7'},
          #   {'os': 'ubuntu-latest', 'python': 'pypy-3.8'},
          # ],
        }
        # this is the fastest one:
        reduced_matrix = {
          'python': ['3.9'],
          'os': ['ubuntu-latest'],
        }
        github_repository = os.environ['GITHUB_REPOSITORY']
        if github_repository.lower() == 'hathornetwork/hathor-core':
            matrix = full_matrix
        else:
            matrix = reduced_matrix
        print('::set-output name=matrix::' + json.dumps(matrix))
  check-matrix:
    runs-on: ubuntu-latest
    needs: matrix
    steps:
    - name: Install json2yaml
      run: |
        sudo npm install -g json2yaml
    - name: Check matrix definition
      run: |
        matrix='${{ needs.matrix.outputs.matrix }}'
        echo $matrix
        echo $matrix | jq .
        echo $matrix | json2yaml
  test:
    name: python-${{ matrix.python }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: matrix
    timeout-minutes: 120  # default is 360
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install Ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: 'sudo apt-get -qy update && sudo apt-get -qy install graphviz librocksdb-dev libsnappy-dev liblz4-dev'
    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: 'brew update -q && brew install -q graphviz rocksdb'
    - name: Install Poetry
      run: pip -q --no-input install poetry
    - name: Install Poetry dependencies
      run: poetry install -n --no-root
    - name: Cache mypy
      uses: actions/cache@v2
      with:
        path: .mypy_cache
        # this key is setup such that every branch has its cache and new branches can reuse dev's cache, but not the other way around
        key: ${{ runner.os }}-py${{ matrix.python }}-mypy-${{ github.head_ref || github.ref }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python }}-mypy-refs/heads/dev-
          ${{ runner.os }}-py${{ matrix.python }}-mypy-
    - name: Run linters
      run: poetry run make check
    - name: Run tests
      run: poetry run make tests
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      if: matrix.python == 3.9 && matrix.os == 'ubuntu-latest'
